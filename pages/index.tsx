import Head from 'next/head'
import {ApolloClient, ApolloQueryResult, InMemoryCache} from '@apollo/client';
import {RestLink} from 'apollo-link-rest';
import {gql} from '@apollo/client';
import {JsonApiLink} from "apollo-link-json-api";
import {useEffect, useState} from "react";
import React from 'react';
import {useQuery} from '@apollo/client';
import client from '../lib/withApollo'
import {booksQuery as query} from '../queries/booksQuery'
import Book from "../components/Book";
import {Box} from "@material-ui/core";
import {Grid} from "@material-ui/core";
import Search from "../components/Search";

export interface AuthorI {
    __typename: string;
    name: string;
}

export interface PhotoI {
    __typename: string;
    uri: string;
}

export interface BookI {
    __typename: string;
    author: AuthorI;
    photos: PhotoI[];
    title: string;
}

interface BooksI {
    books: BookI[]
}

export default function Home() {
    const [books, setBooks] = useState<BooksI>()
    useEffect(() => {
        client.query({query}).then((response: ApolloQueryResult<BooksI>) => {
            console.log(response.data)
            setBooks(response.data)
        });
    }, [])
// Invoke the query and log the person's name
    return (
        <Grid container={true} direction={'column'}  alignItems={'center'}>
            <Head>
                <title>Book store</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <Search/>
            <Box width={'100vw'} display={'flex'} flexWrap={'wrap'} justifyContent={'center'} padding={'0 10px 0 10px'}>
                {books?.books.map((book, index)=> {
                    return (
                        <Book key={index} book={book}/>
                    )
                })}
            </Box>
        </Grid>
    )
}
