import Head from 'next/head'
import {ApolloClient, ApolloQueryResult, InMemoryCache} from '@apollo/client';
import {RestLink} from 'apollo-link-rest';
import {gql} from '@apollo/client';
import {JsonApiLink} from "apollo-link-json-api";
import {useEffect, useState} from "react";
import React from 'react';
import {useQuery} from '@apollo/client';
import client from '../lib/withApollo'
import {booksQuery as query} from '../queries/booksQuery'

// const query = gql`
//     query books {
//         books @jsonapi(path: "books") {
//             title
//             author
//             photos
//         }
//     }
// `;

export interface Author {
    type: string;
    id: string;
}

export interface Book {
    __typename: string;
    author: Author;
    title: string;
}

export interface RootObject {
    books: Book[];
}


export default function Home() {
    const [books, setBooks] = useState<RootObject>()
    useEffect(() => {
        client.query({query}).then((response: ApolloQueryResult<RootObject>) => {
            console.log(response.data)
            setBooks(response.data)
        });
    }, [])

// Invoke the query and log the person's name
    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            {JSON.stringify(books?.books[0].title)}
        </div>
    )
}
